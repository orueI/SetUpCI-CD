
name: Create release

on:
  push:
    tags:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
#        with:
#          # Optionally strip `v` prefix
#          strip_v: true

      - name: Echo tag
        run: echo ${{steps.tag.outputs.tag}}

      - name: Echo name
        run: echo ${{ github.ref_name }}

      - name: Echo id
        run: echo ${{ github.run_number }}

      - name: Build APK
        if: ${{ success() }}
        run: ./gradlew app:assemble -PversionName="${{ steps.previoustag.outputs.tag }}" -PversionCode="${{ github.run_number }}" --no-daemon

      - name: Build ABB
        if: ${{ success() }}
        run: ./gradlew app:bundleRelease -PversionName="${{ steps.previoustag.outputs.tag }}" -PversionCode="${{ github.run_number }}" --no-daemon
#        run: ./gradlew app:bundleCmlRelease -PversionName="${{ steps.previoustag.outputs.tag }}.${{ github.run_number }}" -PversionCode="${{ github.run_number }}" --no-daemon

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}

      - name: Save APK to artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ steps.previoustag.outputs.tag }}
          path: |
            app/build/outputs/**/*.apk
            app/build/outputs/**/*.aab

      - name: Download artifacts
        id: download_artifact
        uses: actions/download-artifact@v3
        with:
          name: build-${{ steps.previoustag.outputs.tag }}
          path: artifact

      - name: Echo Download artifacts
        run: echo ${{ steps.download_artifact.outputs.download_path }}

      - name: Upload APK to Release
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download_artifact.outputs.download_path }}
          asset_name: builds
          asset_content_type: application/vnd.android.package-archive
